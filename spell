#!/usr/bin/env bash
# shellcheck disable=SC2013
# shellcheck disable=SC2034
set -e

TARGETS=("install" "enable")
RUN="${1:-enable}"

# Built-in vars
[ -z "$USER" ] && USER="$(id -un)"
[ -z "$HOME" ] && HOME="$(getent passwd $USER | cut -d':' -f6)"

# Directories configs
SCRIPT_BIN="$(readlink -f $0)"
SCRIPT_DIR=$(dirname "$SCRIPT_BIN")
SCRIPT_INC="$SCRIPT_DIR/inc"

CONFIG="${SCRIPT_DIR}/config.json"

SPELLS_DIR="${HOME}/.local/spellbook"
SPELLS_CONFIG=".spellbook.json"

# Temporary data configs
TEMP_PROFILE=$(mktemp /tmp/spellbook-profile.XXXXXX)

# Python and modules params
PRE_COMMIT_HOME=".pre-commit"

REQUIREMENTS=(
	"jq"
	"tar"
	"git"
	"curl"
	"python3"
)

# validate binaries
for _req in "${REQUIREMENTS[@]}"; do
	command -v "$_req" >/dev/null || {
		echo "ERROR: requirements not met!"
		echo "ERROR: $_req is missed!"
		exit 255
	}
done

_include() {
	local _path
	local _func
	local _content

	_path="${1:?}" || {
		echo "ERROR: include: path param is missed, but required!"
		exit 255
	}

	[ -f "$_path" ] || {
		echo "ERROR: include: $_path not found!"
		exit 255
	}

	_func=$(basename "$_path")
	_content=$(sed -e '1{/^#!/d;}' -e '/^[[:space:]]*$/d' "$_path")

	eval "$_func() {
    $_content
  }"
}

_include "$SCRIPT_INC/init"
_include "$SCRIPT_INC/motd"
_include "$SCRIPT_INC/profile"
_include "$SCRIPT_INC/yorn"
_include "$SCRIPT_INC/files"
_include "$SCRIPT_INC/spells"
_include "$SCRIPT_INC/virtualenv"

install() {
	if ! grep -q "alias spell=" "${HOME}/.bashrc"; then
		echo "Installing alias"
		echo "alias spell=${SCRIPT_BIN}" >>"${HOME}/.bashrc"
	else
		echo "spell alias already set!"
	fi
}

# Enable virtual console
enable() {
	# initialize defaults if required
	init
	# copying pre-commit checks configs
	files
	# installing spells
	spells
	# create virtual env
	virtualenv

	echo "Starting Oberon Systems Developing Environment..."

	# build environment
	{
		cat "${HOME}/.bashrc"
		profile
	} >"$TEMP_PROFILE"
	# print motd
	motd
	# run env
	/usr/bin/env bash --init-file "$TEMP_PROFILE"
	.venv/bin/pre-commit uninstall >/dev/null
	rm -f "$TEMP_PROFILE"
}

$RUN
