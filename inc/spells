#!/usr/bin/env bash
#
# Install supported spells
#

if ! declare -f "yorn" > /dev/null; then
    echo "ERROR: spells: required function 'yorn' not found!"
    echo "ERROR: spells: please include int first!"
    exit 255
fi

SPELLS_CONFIG="${SPELLS_CONFIG:?}"
CONFIG="${CONFIG:?}"
SCRIPT_DIR="${SCRIPT_DIR:?}"
SPELLS_DIR="${SPELLS_DIR:?}"

_tmp=""
_param=""

_installed=()
_enabled=()

_spells=$(
  jq -r --slurpfile local "$SPELLS_CONFIG" \
    '(.spells | keys) - ($local[].spells | keys ) | .[]' \
    "$CONFIG"
)

# shellcheck disable=SC2206
_spells=($_spells)
[ "${#_spells[@]}" -eq 0 ] && {
  # all spells installed
  return
}

# shellcheck disable=SC2005
for _spell in "${_spells[@]}"; do
  _param=""
  "$SCRIPT_DIR/spells/$_spell" "_info"
  echo "Spell $_spell not installed, would you like to install it? [Y/n]: "
  yorn "Y" && {
    echo "Installing spell: $_spell"
    "$SCRIPT_DIR/spells/$_spell" "_install" "$SPELLS_DIR"
    _installed+=("$_spell")
    echo "Would tou like to enable spell: $_spell? [Y/n]: "
    yorn "Y" && {
      echo "Enable spell: $_spell"
      _param="$($SCRIPT_DIR/spells/$_spell _enable $SPELLS_DIR)"
    }
  }
  _tmp=$(
    jq -cn --arg spell "$_spell" \
      --arg param "$_param" \
      '{$spell: ($param | if . == "" then false else . end)}'
  )
  _enabled+=("$_tmp")
done

echo "Installed ${#_installed[@]}/${#_spells[@]} spells"
echo "Enabled ${#_enabled[@]} spells"

[ "${#_enabled[@]}" -eq 0 ] && {
  # no spells enabled
  return
}

_tmp=$(mktemp)
_json=$(echo "${_enabled[*]}" | jq -s '.')
(
  jq -re --argjson spells "$_json" \
    '.spells = (($spells | add) + .spells // {})' \
    "$SPELLS_CONFIG" >"$_tmp" && mv "$_tmp" "$SPELLS_CONFIG"
) || {
  echo "ERROR: Unable to update local config's files list!"
  rm -f "$_tmp"
  exit 255
}

rm -f "$_tmp"
unset _tmp _param _installed _enabled _spells _spell _json
